/////////maximum sum of non-adjacent element

this is the recursion code with memoiation

int solve(int ind,vector<int>&nums,vector<int>&dp)
{
    if(ind==0)
    {
        return nums[ind];
    }
    if(ind<0)
    {
        return 0;
    }
    if(dp[ind]!=-1)
    {
        return dp[ind];
    }
    int pick=nums[ind]+solve(ind-2,nums,dp);
    int notPick=0+solve(ind-1,nums,dp);

    return dp[ind]=max(pick,notPick);

}

this is tabulation code

{
	int n = array.size();
	vector<int>dp(n, 0);
	dp[0] = nums[0];
	for (int i = 1; i < n; i++)
	{
		int take = nums[i];
		if (i > 1)
		{
			take = take + dp[i - 2];
		}
		int notTake = 0 + dp[i - 1];

		dp[i] = max(take, notTake);
	}

	return dp[n - 1];
}

//this is space optimizatin code

{
	int pre=nums[0];
	int pre2=0;
	// for(int i=1;i<n;i++)
	{
	    int take=nums[i];

	    if(i>1)
	    {
	        take=take+pre2;
	    }
	    int notTake=0+pre;

	    int current=max(take,notTake);
	    pre2=pre;
	    pre=current;

	}
	return pre;

}
